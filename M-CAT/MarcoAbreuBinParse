
__author__ = 'Marco Abreu'

import subprocess
import sys
import os


Bin_Size = 100
#GenSource = "/home/bnfo620/M-CAT"
#Dump = ""
#Source = ""
#Results_to = ''
### program as arguments accepts the directory with flagstat files and a filename to be written to
try:
    if len(sys.argv)<3:
        print "USAGE: python sys.argv[0] input-dir output-dir index \n",
        print "Attempting default value test parameters...."
        #GenSource = 'C:/Users/Owner/PycharmProjects/Homework/mcattest.txt'
        GenSource = 'C:/Users/bccl_user/Desktop/Bnfo691_602/testgenome.txt'
        Dump = 'C:/Users/bccl_user/Desktop/Bnfo691_602/dump.txt'
        #Results_to = ''
    else:
        GenSource = sys.argv[1]
        #Results_to = sys.argv[2]
except IOError:
    print "Error in input"
print "Source: ",GenSource

#Takein arguments from commandline, and run script which runs 3 programs

def TaxID_to_GI(Dump):
    f =open(Dump)
    dump_hash = {}
    for line in f:
        gi, tax_id = line.split()
        #print gi,tax_id
        if gi not in dump_hash.keys():
            dump_hash[gi] = tax_id
        else:
            pass
    return dump_hash


def Genome_Binner(GenSource, Bin_Size = 1000):
    f =open(GenSource)
    Gen_Bin_Array = []
    sequence_count = 0
    Genome_name = ""
    for line in f:
        if line[0] == ">":
            Gen_Bin_Array.append([Genome_name,sequence_count])
            sequence_count = 0
            Genome_name = line.strip()
        else:
            sequence_count += len(line)
    Gen_Bin_Array.append([Genome_name,sequence_count])
    print Gen_Bin_Array
    return Gen_Bin_Array

def TaxID_gi_bin_hasher(Dump,GenSource, Bin_Size=1000):
    Hash = TaxID_to_GI(Dump)
    Array = Genome_Binner(GenSource,Bin_Size)
    taxID_bins = {}




def fileProcess(Source):
    for filename in os.listdir(Source):
        print "filename:", filename

def fileParse(file):
    pass


TaxID_gi_bin_hasher(Dump,GenSource)
